version: "2"
services:
  # weathercan-python:
  #   # image: python:3.8

  #   build:
  #     context: ./
  #     dockerfile: ./docker/Dockerfile
  #   container_name: weathercan-python
  #   # restart: unless-stopped
  #   # tmpfs: "true"
  #   environment:
  #     ENV: "production"
  #   volumes:
  #     - ./:/opt/weather
  # command: bash -c "pip install pipenv && cd /opt && pipenv install && pipenv run weathercanada_atom"
  # weathercan-postgres:
  # images: postgres:12
  # container_name: weathercan-postgres
  # ports:
  #   -

  # hddtemp:
  #   image: drewster727/hddtemp-docker
  #   container_name: hddtemp
  #   hostname: homeserver
  #   privileged: true
  #   environment:
  #     HDDTEMP_ARGS: "-q -d -F /dev/sd*"
  #     TZ: "America/Chicago"

  # speedtest:
  #   image: barrycarey/speedtest-for-influxdb-and-grafana
  #   container_name: speedtest
  #   hostname: homeserver
  #   volumes:
  #     - ./config.ini:/speedtest/config.ini
  #   # restart: always

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    hostname: homeserver
    privileged: true
    # restart: unless-stopped
    links:
      - influxdb
    environment:
      HOST_PROC: /host/proc
      HOST_SYS: /host/sys
      HOST_ETC: /host/etc
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      # - /sys:/host/sys:ro
      # - /proc:/host/proc:ro
      # - /etc:/host/etc:ro
      # - /data/zp01:/data/zp01
      # - /data/zp02:/data/zp02
      # - /data/zp03:/data/zp03
      # - /:/host/root:ro

  influxdb:
    # image: influxdb:2.3
    image: influxdb:latest
    container_name: influxdb
    hostname: homeserver
    environment:
      - INFLUXDB_DATA_CACHE_SNAPSHOT_WRITE_COLD_DURATION= 25m
      - INFLUXDB_DB=speedtests
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpass
    volumes:
      - influxdb_data:/var/lib/influxdb
    ports:
      - 8086:8086
    # restart: always
  chronograf:
    # image: chronograf:1.9
    image: chronograf:latest
    container_name: chronograf
    hostname: homeserver
    volumes:
      - chronograf_data:/var/lib/chronograf
    ports:
      - 8087:8888
    # restart: always
    depends_on:
      - influxdb
  grafana:
    image: thomasconnors/grafana-custom
    container_name: grafana
    hostname: homeserver
    environment:
      # - GF_INSTALL_PLUGINS=snuids-radar-panel 1.4.4, grafana-piechart-panel 1.4.0, grafana-worldmap-panel 0.2.1, vonage-status-panel 1.0.9, natel-discrete-panel, briangann-gauge-panel, jdbranham-diagram-panel, grafana-simple-json-datasource
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    # restart: always
    depends_on:
      - influxdb
volumes:
  influxdb_data:
  chronograf_data:
  grafana_data:
